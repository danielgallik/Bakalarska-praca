@model Alarmee.Web.Models.TestPlanModel

<div class="hospitalPlan">
    <canvas id="myCanvas" width="600" height="400"></canvas>

    @foreach (var bed in Model.Beds)
    {
        <script>
            var canvas = document.getElementById('myCanvas');
            var context = canvas.getContext('2d');

            context.beginPath();
            context.rect(@bed.Vertices[0].X, @bed.Vertices[0].Y, @bed.Vertices[1].X, @bed.Vertices[1].Y);
            context.fillStyle = @Html.Raw(Json.Encode(bed.Color));
            context.fill();
            context.stroke();

            context.font = '20pt Calibri';
            context.fillStyle = 'white';
            context.fillText(@Html.Raw(Json.Encode(bed.Name)), @bed.NamePosition.X, @bed.NamePosition.Y);
        </script>
    }

    @foreach (var room in Model.Rooms)
    {
        <script>
    var canvas = document.getElementById('myCanvas');
    var context = canvas.getContext('2d');

    context.beginPath();
    context.moveTo(@room.Vertices[0].X, @room.Vertices[0].Y);
            context.lineTo(@room.Vertices[1].X, @room.Vertices[1].Y);
            context.lineTo(@room.Vertices[2].X, @room.Vertices[2].Y);
            context.lineTo(@room.Vertices[3].X, @room.Vertices[3].Y);
            context.lineTo(@room.Vertices[0].X, @room.Vertices[0].Y);
            context.stroke();

            context.font = '20pt Calibri';
            context.fillStyle = @Html.Raw(Json.Encode(room.Color));
            context.fillText(@Html.Raw(Json.Encode(room.Name)), @room.NamePosition.X, @room.NamePosition.Y);
        </script>
    }
</div>

<div class="pumpsInfo">
    <ul>
        @foreach (string pump in @Model.PumpsAsString)
        {
            <li>@pump</li>
        }
    </ul>
</div>

<div class="alertInfo">
    <ul>
        @foreach (string alert in @Model.AlertsAsString)
        {
            <li>@alert</li>
        }
    </ul>
</div>